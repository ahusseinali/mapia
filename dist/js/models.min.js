var app=app||{};app.models=app.models||{},function(){"use strict";app.models.mapStyles={grayscale:[{featureType:"landscape",stylers:[{saturation:-100},{lightness:65},{visibility:"on"}]},{featureType:"poi",stylers:[{saturation:-100},{lightness:51},{visibility:"simplified"}]},{featureType:"road.highway",stylers:[{saturation:-100},{visibility:"simplified"}]},{featureType:"road.arterial",stylers:[{saturation:-100},{lightness:30},{visibility:"on"}]},{featureType:"road.local",stylers:[{saturation:-100},{lightness:40},{visibility:"on"}]},{featureType:"transit",stylers:[{saturation:-100},{visibility:"simplified"}]},{featureType:"administrative.province",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"labels",stylers:[{visibility:"on"},{lightness:-25},{saturation:-100}]},{featureType:"water",elementType:"geometry",stylers:[{hue:"#ffff00"},{lightness:-25},{saturation:-97}]}]}}();var app=app||{};app.models=app.models||{},function(){var e=function(e){e?(this.img=e.image_url,this.rating=e.rating_img_url,this.url=e.url,this.snippet=e.snippet_text,this.noData=""):this.noData=ko.observable("No Yelp Data Found")};app.models.yelp=e}();var app=app||{};app.models=app.models||{},function(){"use strict";var e=function(e,t){var a=e.geometry.location;this.id=e.place_id,this.latLng=a,this.name=e.name,this.address=e.vicinity,this.rating=e.rating,this.img="https://maps.googleapis.com/maps/api/streetview?size=350x250&heading=151.78&pitch=-0.76&location="+a.lat()+","+a.lng()+"&key="+googleMapsKey,this.types=[t],this.yelp=ko.observable(null),this.marker=null};e.prototype.setMarker=function(e){this.marker=e},e.prototype.hasYelpData=function(){return null!=this.yelp()},app.models.place=e}();var app=app||{};app.models=app.models||{},function(){"use strict";var e=function(e){this.yelp={url:"http://api.yelp.com/v2/search",consumerKey:yelpConsumerKey,consumerSecret:yelpConsumerSecret,accessToken:yelpAccessToken,accessTokenSecret:yelpAccessTokenSecret,serviceProvider:{signatureMethod:"HMAC-SHA1"}},this.places=[],this.selectedPlaces=ko.observableArray([]),this.currentPlace=ko.observable(null),this.mapModel=e};e.prototype.isPlaceSelected=function(e){return this.isAnyPlaceSelected()&&e.id==this.currentPlace().id},e.prototype.isAnyPlaceSelected=function(){return null!=this.currentPlace()},e.prototype.search=function(e){var t=this.places;this.currentPlace(null),this.places.forEach(function(e){e.marker.setVisible(!1)}),e&&(e=e.toLowerCase(),t=t.filter(function(t){return t.name.toLowerCase().indexOf(e)>-1||t.types.join(" ").toLowerCase().indexOf(e)>-1||t.address.toLowerCase().indexOf(e)>-1})),t.forEach(function(e){e.marker.setVisible(!0)}),this.selectedPlaces(t)},e.prototype.loadGooglePlaces=function(e){this.places.splice(0,this.places.length),this.placesService=new google.maps.places.PlacesService(app.mapObjects.map),this._addGooglePlaces(e,"store"),this._addGooglePlaces(e,"lodge"),this._addGooglePlaces(e,"restaurant"),this._addGooglePlaces(e,"grocery"),this._addGooglePlaces(e,"hospital"),this._addGooglePlaces(e,"park")},e.prototype._addGooglePlaces=function(e,t){var a={location:e,keyword:t,radius:"500"},s=this;s.placesService.nearbySearch(a,function(e){e.forEach(function(e){var a=s.places.filter(function(t){return t.id==e.place_id});if(a.length>0)a[0].types.push(t);else{var i=new app.models.place(e,t),o=s._createMarker(i);i.setMarker(o),s.places.push(i),s.selectedPlaces.push(i),app.mapObjects.bounds.extend(i.latLng),app.mapObjects.map.fitBounds(app.mapObjects.bounds)}})})},e.prototype._loadYelpDetails=function(e){var t=e.name,a=e.latLng.lat()+","+e.latLng.lng(),s=this,i=[];i.push(["term",t]),i.push(["ll",a]),i.push(["callback","cb"]),i.push(["oauth_consumer_key",s.yelp.consumerKey]),i.push(["oauth_consumer_secret",s.yelp.consumerSecret]),i.push(["oauth_token",s.yelp.accessToken]),i.push(["oauth_signature_method",s.yelp.serviceProvider.signatureMethod]);var o={action:s.yelp.url,method:"GET",parameters:i},p={consumerSecret:s.yelp.consumerSecret,tokenSecret:s.yelp.accessTokenSecret};OAuth.setTimestampAndNonce(o),OAuth.SignatureMethod.sign(o,p);var l=OAuth.getParameterMap(o.parameters);l.oauth_signature=OAuth.percentEncode(l.oauth_signature),$.ajax({url:o.action,data:l,cache:!0,dataType:"jsonp",jsonpCallback:"cb"}).done(function(t){if(t.businesses&&t.businesses.length>0){var a=new app.models.yelp(t.businesses[0]);e.yelp(a)}else e.yelp(new app.models.yelp(null))}).fail(function(t,a){e.yelp(new app.models.yelp(null)),e.yelp().noData("Failed to load Yelp Data")})},e.prototype._createMarker=function(e){var t=new google.maps.Marker({position:e.latLng,map:app.mapObjects.map}),a=this;return t.setIcon("img/"+e.types[0]+".png"),t.addListener("click",function(){a.mapModel.closeSideNav.call(a.mapModel),new google.maps.event.trigger(app.mapObjects.infowindow,"closeclick"),app.mapObjects.map.panTo(t.getPosition()),a._loadYelpDetails(e),a.currentPlace(e),t.setAnimation(google.maps.Animation.BOUNCE),setTimeout(function(){t.setAnimation(null),app.mapObjects.infowindow.setContent(app.mapObjects.infobox.outerHTML),app.mapObjects.infowindow.open(app.mapObjects.map,t)},700)}),t},app.models.placesModel=e}();var app=app||{};app.models=app.models||{},function(){"use strict";var e=function(){this.center=ko.observable(new google.maps.LatLng(47.6163,-122.192)),this.styles=ko.observable(app.models.mapStyles.grayscale),this.places=new app.models.placesModel(this),this.sideNavVisible=ko.observable(!1)};e.prototype.search=function(e){this.places.search(e)},e.prototype.openSideNav=function(){this.sideNavVisible(!0)},e.prototype.closeSideNav=function(){this.sideNavVisible(!1)},app.models.mapModel=e}();
//# sourceMappingURL=data:application/json;base64,
